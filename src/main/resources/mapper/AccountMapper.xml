<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.franc.standard.repository.AccountMapper">

    <select id="findById" parameterType="string" resultType="AccountVO">
        /** AccountMapper.findById */
        SELECT A.*
            , (SELECT BANK_NAME FROM BANK WHERE BANK_CD = A.BANK_CD) AS BANK_NAME
        FROM ACCOUNT A
        WHERE A.ACCOUNT_NO = #{accountNo}
    </select>

    <select id="findAll" parameterType="java.util.Map" resultType="AccountVO">
        /** AccountMapper.findAll */
        SELECT A.*
              , (SELECT BANK_NAME FROM BANK WHERE BANK_CD = A.BANK_CD) AS BANK_NAME
        FROM ACCOUNT A
        WHERE A.MEMBER_NO = #{memberNo}
        <if test='bankCd != null and !bankCd.equals("")'>
            AND A.BANK_CD = #{bankCd}
        </if>
        <if test='status != null'>
            AND A.STATUS = #{status}
        </if>
        ORDER BY A.BANK_CD, A.CREATE_DATE DESC
        LIMIT NVL(#{offset}, 0), NVL(#{limit}, 20)
    </select>

    <insert id="save" parameterType="AccountVO">
        /** AccountMapper.save */
        INSERT INTO ACCOUNT(
            ACCOUNT_NO,
            MEMBER_NO,
            BANK_CD,
            PIN,
            CREATE_DATE
        ) VALUES (
            #{accountNo},
            #{memberNo},
            #{bankCd},
            #{pin},
            NOW()
        )
        ON DUPLICATE KEY UPDATE
            MEMBER_NO = #{memberNo}
        <if test='status != null'>
            ,STATUS = #{status}
        </if>
        <if test='deposit != null and deposit > 0'>
            ,DEPOSIT = #{deposit}
        </if>

    </insert>

    <select id="findByIdAndLocking" parameterType="String" resultType="AccountVO">
        /** AccountMapper.findByIdAndLocking */
        SELECT A.*
        FROM ACCOUNT A
        WHERE A.ACCOUNT_NO = #{accountNo}
        FOR UPDATE
    </select>

</mapper>